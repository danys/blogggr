exception.other.error = Erreur exceptionnelle
exception.db.nonTransientExceptionError = Erreur permanente de la database de données.
exception.db.recoverableExceptionError = Erreur recouvrable de la base de données, essayez de nouveau.
exception.db.scriptExceptionError = Erreur lors de l'éxecution de l'SQL
exception.db.transientExceptionError = Erreur temporaire de la base de donnée, essayez de nouveau.
exception.db.wrongPasswordError = Tentative d'authentification non fructueuse!

exception.authentication.userNotFound = Authentification échoué: Utilisateur pas trouvé!
exception.authentication.jwtExpired = JWT expiré!
exception.authentication.jwtError = JWT erreur!
exception.authentication.accessDenied = Accès refusé: Pas permis d'accéder sans authentification!
exception.controller.noHandlerFound = La méthode appelé n'existe pas!
exception.controller.noHandlerFoundHttpVerb = Verbe HTTP utilisé pas valable pour cette fonction API!
exception.controller.servletRequestBindingException = Servlet requête binding erreur!
exception.controller.conversionNotSupported = Conversion pas supporté!
exception.controller.typeMismatch = Type invalide!
exception.controller.httpMessageNotReadable = HTTP message pas lisible!
exception.controller.httpMessageNotWritable = HTTP message peut pas être écrit!
exception.controller.methodArgumentNotValid = Argument de la méthode pas valide!
exception.controller.missingServletRequestPart = Partie de la requête servlet manque!
exception.controller.bindException = Exception de bind!
exception.controller.asyncRequestTimeoutException = Timeout de la requête async!

typeMismatch.userSearchData.maxRecordsCount = maxRecordsCount doit être un nombre entier non nul!

NotNull.userData.firstName = Le prénom ne peut être vide!
Size.userData.firstName = Le prénom doit avoir une longueur entre 3 and 100 caractères!
NotNull.userData.lastName = Le nom de famille ne peut être vide!
Size.userData.lastName = Le nom de famille doit avoir une longueur entre 3 et 100 caractères!
NotNull.userData.email = L'adresse e-mail ne peut être vide!
Email.userData.email = L'adresse e-mail doit être valide!
Size.userData.email = L'adresse e-mail doit avoir une longueur entre 6 et 100 caractères!
NotNull.userData.emailRepeat = La deuxième adresse e-mail inséré ne peut être vide!
Email.userData.emailRepeat = La deuxième adresse e-mail inséré doit être valide!
Size.userData.emailRepeat = La deuxième adresse e-mail inséré doit avoir une longueur entre 6 et 100 caractères!
NotNull.userData.password = Le mot de passe ne peut être vide!
Size.userData.password = Le mot de passe doit avoir une longueur entre 8 et 100 caractères!
NotNull.userData.passwordRepeat = La répétition du mot de passe ne peut être vide!
Size.userData.passwordRepeat = La répétition du mot de passe doit avoir une longueur entre 8 et 100 caractères!
NotNull.userData.sex = La déclaration du sex ne peut être vide!
Enumerated.userData.sex = La déclaration du sex doit prendre la valeur 'm' ou 'f'!
NotNull.userData.lang = La langue doit être renseigné!
Enumerated.userData.lang = La langue doit prendre la valeur 'EN', 'DE' ou 'FR'!

typeMismatch.commentData.postId = postId doit être un nombre entier!
NotNull.commentData.postId = postId ne peut être vide!
NotNull.commentData.text = Le commentaire ne peut être vide!
Size.commentData.text = Le commentaire est trop court!

typeMismatch.friendData.userId1 = userId1 doit être un nombre entier!
NotNull.friendData.userId1 = userId1 ne peut être vide!
typeMismatch.friendData.userId2 = userId2 doit être un nombre entier!
NotNull.friendData.userId2 = userId2 ne peut être vide!
typeMismatch.friendData.action = action doit être un nombre entier entre 1 et 3!
NotNull.friendData.action = action ne peut être vide!
Min.friendData.action = action doit être un nombre entier entre 1 et 3!
Max.friendData.action = action doit être un nombre entier entre 1 et 3!

NotNull.postData.title = Le titre ne peut être vide!
Size.postData.title = Le titre doit avoir une longueur d'au moins 4 caractères!
NotNull.postData.textBody = Le texte ne peut être vide!
Size.postData.textBody = Le texte doit avoir une longueur d'au moins 10 caractères!
NotNull.postData.isGlobal = La valeur booléenne isGlobal doit être fourni!
PostController.updatePost.allFieldsNil = Au moins un champ ne peut être vide!
typeMismatch.postSearchData.posterUserId = Le user Id du posteur n'est pas un nombre valide!
Size.postSearchData.title = La longueur du titre doit être entre 3 et 100 caractères!
Enumerated.postSearchData.visibility = Visibility doit être une des valeurs suivantes: 'onlyGlobal', 'all', 'onlyFriends', 'onlyCurrentUser'!
NotNull.postSearchData.maxRecordsCount = maxRecordsCount net peut être vide!
typeMismatch.postSearchData.maxRecordsCount = maxRecordsCount doit être un nombre entier!
typeMismatch.postSearchData.before = before doit être un nombre entier!
typeMismatch.postSearchData.after = after doit être un nombre entier!

NotNull.simpleUserSearchData.searchString = La chaîne de caractères pour la recherche ne peut être vide!
Size.simpleUserSearchData.searchString = La chaîne de caractères pour la recherche a une longueur minimum de 3!
NotNull.simpleUserSearchData.limit = Limit ne peut être vide!

UsersController.getUsers.afterBeforeBothSet = Seulement after ou before mais pas les deux!
PostsController.getPost.titleSizeTooShort = Le titre fourni est trop court!

NotNull.searchData.maxRecordsCount = maxRecordsCount net peut être vide!

UserImageService.postImage.tooManyTries = Trop d'essais!
UserImageService.postImage.scalingException = Exception pendant le redimensionement de l'image!
UserImageService.postImage.storageError = Erreur pendant le stockage de l'image dans la cloud!
UserImageService.postImage.temporaryFileError = Erreur pendant l'enlèvement des images temporaires
UserImageService.getUserImage.notFoundException = Image de l'utilisateur pas trouvé!

FileStorageManager.store.emptyFileNotAcceptableException = Fichiers vides pas acceptés:
FileStorageManager.store.failStoreFileException = Erreur de sauvegarde du fichier
FileStorageManager.getImageResourceFromCloud.malformedUrlException = L'URL pour les images cloud n'est pas correct!
FileStorageManager.getImageResourceFromCloud.unableLoadException = Uncapable de charger le fichier:

CommentService.createComment.commentNotFoundException = Commentaire pas trouvé!
CommentService.createComment.userNotFoundException = Utilisateur pas trouvé!
CommentService.createComment.postNotFoundException = Post pas trouvé!
CommentService.createComment.authorizationRestrictionException = Utilisateur doit être ami avec le posteur car le post n'est pas visible globalement!
CommentService.updateComment.notAuthorized = Pas permis de changer le commentaire!
CommentService.deleteComment.notAuthorized = Pas permis d'effacer le commentaire!
CommentService.getCommentsByPostId.notFound = getCommentsByPostId = Post pas trouvé!
CommentService.getCommentsByPostId.notAuthorized = Pas permis de montrer le post et ses commentaires!

FriendService.createFriend.currentUserNotPresentException = L'utilisateur actuel doit faire partie de la relation amicale!
FriendService.createFriend.oneSelfFriendException = L'utilisateur ne peut pas être un ami avec lui-même!
FriendService.friendNotFoundException = Relation amicale pas trouvé!
FriendService.updateFriend.notAuthorizedException = Modification de la relation amicale pas authorisé!
FriendService.userNotFoundException = Utilisateur pas trouvé!
FriendService.updateFriend.unableUpdateException = Le statut de la relation amicale ne peut être mis à jour!
FriendService.deleteFriend.notAuthorizedException = Pas authorisé d'effacer la relation amicale!
FriendService.getFriend.notAuthorizedException = Pas authorisé de montrer la relation amicale!

PostService.userNotFound = Utilisateur pas trouvé!
PostService.postNotFound = Post pas trouvé!
PostService.notAuthorizedModify = Pas authorisé de modifier le post!
PostService.notAuthorizedView = Pas authorisé de monter le post!

SessionService.expirationError = Erreur pendant la détermination de l'expiration!
SessionService.userDisabledError = Confirmez votre adresse e-mail s.v.p.!

UserService.createUser.passwordMismatch = Les deux champs mots de passe doivent avoir la même valeur!
UserService.createUser.emailMismatch = Les deux champs e-mail doivent avoir la même valeur!
UserService.createUser.emailException = Ne peux pas envoyer l'e-mail de confirmation de la registration!
UserService.createUser.emailSubject = Blogggr.com - Confirme ta souscription!
UserService.createUser.emailWelcome = Bienvenue chez Blogggr
UserService.createUser.emailConfirmText = Confirme ta souscription
UserService.createUser.emailClickHere = Clique ici
UserService.createUser.userExistsException = Un utilisateur avec l'adresse e-mail donnée existe déjà!

UserService.userNotFound = Utilisateur pas trouvé!
UserService.updateUser.notAuthorizedModify = Pas authorisé de changer l'utilisateur!
UserService.updateUser.wrongOldPassword = Ancien mot de passe erroné!
UserService.updateUser.oldPasswordEmpty = Ancien mot de passe doit pas être vide!

UserService.confirmEmail.wrongChallenge = Verification e-mail échoué: mauvais challenge transmis!
UserController.confirmEmail.emailOK = Verification e-mail fructueuse pour l'adresse e-mail {0}!

UserDao.findByIdWithImages.notFound = Utilisateur pas trouvé!
FriendDao.noResult = Pas trouvé des amis!
PostDao.afterBeforeSetException = Peut pas mettre before et after en même temps!
PostDao.nextLimitNullException = Next et limit doivent pas être nul!
PostDao.previousLimitNullException = Previous et limit doivent pas être nul!