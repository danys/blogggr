exception.other.error = Erreur exceptionnelle
exception.db.nonTransientExceptionError = Erreur permanente de la database de données.
exception.db.recoverableExceptionError = Erreur recouvrable de la base de données, essayez de nouveau.
exception.db.scriptExceptionError = Erreur lors de l'éxecution de l'SQL
exception.db.transientExceptionError = Erreur temporaire de la base de donnée, essayez de nouveau.
exception.db.wrongPasswordError = Tentative d'authentification non fructueuse!

exception.authentication.userNotFound = Authentification échoué: Utilisateur pas trouvé!
exception.authentication.jwtExpired = JWT expiré!
exception.authentication.jwtError = JWT erreur!
exception.authentication.accessDenied = Accès refusé: Pas permis d'accéder sans authentification!
exception.controller.noHandlerFound = La méthode appelé n'existe pas!
exception.controller.noHandlerFoundHttpVerb = Verbe HTTP utilisé pas valable pour cette fonction API!
exception.controller.servletRequestBindingException = Servlet requête binding erreur!
exception.controller.conversionNotSupported = Conversion pas supporté!
exception.controller.typeMismatch = Type invalide!
exception.controller.httpMessageNotReadable = HTTP message pas lisible!
exception.controller.httpMessageNotWritable = HTTP message peut pas être écrit!
exception.controller.methodArgumentNotValid = Argument de la méthode pas valide!
exception.controller.missingServletRequestPart = Partie de la requête servlet manque!
exception.controller.bindException = Exception de bind!
exception.controller.asyncRequestTimeoutException = Timeout de la requête async!

typeMismatch.userSearchData.maxRecordsCount = maxRecordsCount doit être un nombre entier non nul!

NotNull.userData.firstName = Le prénom ne peut être vide!
Size.userData.firstName = Le prénom doit avoir une longueur entre 3 and 100 caractères!
NotNull.userData.lastName = Le nom de famille ne peut être vide!
Size.userData.lastName = Le nom de famille doit avoir une longueur entre 3 et 100 caractères!
NotNull.userData.email = L'adresse e-mail ne peut être vide!
Email.userData.email = L'adresse e-mail doit être valide!
Size.userData.email = L'adresse e-mail doit avoir une longueur entre 6 et 100 caractères!
NotNull.userData.emailRepeat = La deuxième adresse e-mail inséré ne peut être vide!
Email.userData.emailRepeat = La deuxième adresse e-mail inséré doit être valide!
Size.userData.emailRepeat = La deuxième adresse e-mail inséré doit avoir une longueur entre 6 et 100 caractères!
NotNull.userData.password = Le mot de passe ne peut être vide!
Size.userData.password = Le mot de passe doit avoir une longueur entre 8 et 100 caractères!
NotNull.userData.passwordRepeat = La répétition du mot de passe ne peut être vide!
Size.userData.passwordRepeat = La répétition du mot de passe doit avoir une longueur entre 8 et 100 caractères!
NotNull.userData.sex = La déclaration du sex ne peut être vide!
Enumerated.userData.sex = La déclaration du sex doit prendre la valeur 'm' ou 'f'!
NotNull.userData.lang = La langue doit être renseigné!
Enumerated.userData.lang = La langue doit prendre la valeur 'EN', 'DE' ou 'FR'!

typeMismatch.commentData.postId = postId doit être un nombre entier!
NotNull.commentData.postId = postId ne peut être vide!
NotNull.commentData.text = Le commentaire ne peut être vide!
Size.commentData.text = Le commentaire est trop court!

typeMismatch.friendData.userId1 = userId1 doit être un nombre entier!
NotNull.friendData.userId1 = userId1 ne peut être vide!
typeMismatch.friendData.userId2 = userId2 doit être un nombre entier!
NotNull.friendData.userId2 = userId2 ne peut être vide!
typeMismatch.friendData.action = action doit être un nombre entier entre 1 et 3!
NotNull.friendData.action = action ne peut être vide!
Min.friendData.action = action doit être un nombre entier entre 1 et 3!
Max.friendData.action = action doit être un nombre entier entre 1 et 3!

NotNull.postData.title = Le titre ne peut être vide!
Size.postData.title = Le titre doit avoir une longueur d'au moins 4 caractères!
NotNull.postData.textBody = Le texte ne peut être vide!
Size.postData.textBody = Le texte doit avoir une longueur d'au moins 10 caractères!
NotNull.postData.isGlobal = La valeur booléenne isGlobal doit être fourni!
PostController.updatePost.allFieldsNil = Au moins un champ ne peut être vide!
typeMismatch.postSearchData.posterUserId = Le user Id du posteur n'est pas un nombre valide!
Size.postSearchData.title = La longueur du titre doit être entre 3 et 100 caractères!
Enumerated.postSearchData.visibility = Visibility doit être une des valeurs suivantes: 'onlyGlobal', 'all', 'onlyFriends', 'onlyCurrentUser'!
NotNull.postSearchData.maxRecordsCount = maxRecordsCount net peut être vide!
typeMismatch.postSearchData.maxRecordsCount = maxRecordsCount doit être un nombre entier!
typeMismatch.postSearchData.before = before doit être un nombre entier!
typeMismatch.postSearchData.after = after doit être un nombre entier!

NotNull.simpleUserSearchData.searchString = La chaîne de caractères pour la recherche ne peut être vide!
Size.simpleUserSearchData.searchString = La chaîne de caractères pour la recherche a une longueur minimum de 3!
NotNull.simpleUserSearchData.limit = Limit ne peut être vide!

UsersController.getUsers.afterBeforeBothSet = Seulement after ou before mais pas les deux!
PostsController.getPost.titleSizeTooShort = Le titre fourni est trop court!

NotNull.searchData.maxRecordsCount = maxRecordsCount net peut être vide!

UserService.createUser.passwordMismatch = Les deux champs mots de passe doivent avoir la même valeur!
UserService.createUser.emailMismatch = Les deux champs e-mail doivent avoir la même valeur!

UserImageService.postImage.tooManyTries = Too many tries!
UserImageService.postImage.scalingException = Exception scaling image!
UserImageService.postImage.storageError = Error storing image in the cloud!
UserImageService.postImage.temporaryFileError = Error removing temporary image files
UserImageService.getUserImage.notFoundException = UserImage not found!

FileStorageManager.store.emptyFileNotAcceptableException = Empty files are not accepted:
FileStorageManager.store.failStoreFileException = Failed to store file
FileStorageManager.getImageResourceFromCloud.malformedUrlException = Malformed image cloud URL!
FileStorageManager.getImageResourceFromCloud.unableLoadException = Unable to load file:

CommentService.createComment.commentNotFoundException = Comment not found!
CommentService.createComment.userNotFoundException = User not found!
CommentService.createComment.postNotFoundException = Post not found!
CommentService.createComment.authorizationRestrictionException = User must be friends with poster as post is not globally visible!
CommentService.updateComment.notAuthorized = Not allowed to change comment!
CommentService.deleteComment.notAuthorized = Not allowed to delete comment!
CommentService.getCommentsByPostId.notFound = getCommentsByPostId = Did not find post!
CommentService.getCommentsByPostId.notAuthorized = Not allowed to view this post and its comments!

FriendService.createFriend.currentUserNotPresentException = Current user must be a part of the new friendship!
FriendService.createFriend.oneSelfFriendException = Can not be befriended with oneself!
FriendService.friendNotFoundException = Friendship not found!
FriendService.updateFriend.notAuthorizedException = Not authorized to change this friendship!
FriendService.userNotFoundException = User not found!
FriendService.updateFriend.unableUpdateException = Cannot update friend status!
FriendService.deleteFriend.notAuthorizedException = Not authorized to delete friendship!
FriendService.getFriend.notAuthorizedException = Not allowed to view this friendship!

PostService.userNotFound = User not found!
PostService.postNotFound = Post not found!
PostService.notAuthorizedModify = No authorization to modify this post!
PostService.notAuthorizedView = No authorization to view this post!

SessionService.expirationError = Error determining expiration

UserService.userNotFound = User not found!
UserService.updateUser.notAuthorizedModify = Not authorized to change this user!
UserService.updateUser.wrongOldPassword = Old password is wrong!
UserService.updateUser.oldPasswordEmpty = must be provided!

UserDao.findByIdWithImages.notFound = Utilisateur pas trouvé!
FriendDao.noResult = Did not find any friends!
PostDao.afterBeforeSetException = Cannot set both before and after!
PostDao.nextLimitNullException = Next and limit should not be null!
PostDao.previousLimitNullException = Previous and limit should not be null!