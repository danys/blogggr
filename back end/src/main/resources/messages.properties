exception.other.error = Exceptional error
exception.db.nonTransientExceptionError = Non-transient database error.
exception.db.recoverableExceptionError = Recoverable database error, please retry.
exception.db.scriptExceptionError = Error processing SQL.
exception.db.transientExceptionError = Transient database error, please retry.
exception.db.wrongPasswordError = Credentials not valid!
service.user.createUser.passwordMismatch = The two password fields must have the same value!
service.user.createUser.emailMismatch = The two e-mail fields must have the same value!
dao.user.findByIdWithImages.notFound = User not found!
exception.authentication.userNotFound = Authentication failed: User not found!
exception.authentication.jwtExpired = JWT has expired!
exception.authentication.jwtError = JWT error!
exception.authentication.accessDenied = Access denied: Unauthenticated access not allowed!
exception.controller.noHandlerFound = API method does not exist!
exception.controller.noHandlerFoundHttpVerb = No handler for API method HTTP verb!
exception.controller.servletRequestBindingException = Servlet request binding exception!
exception.controller.conversionNotSupported = Conversion not supported!
exception.controller.typeMismatch = Type mismatch!
exception.controller.httpMessageNotReadable = HTTP message not readable!
exception.controller.httpMessageNotWritable = HTTP message not writable!
exception.controller.methodArgumentNotValid = Method argument not valid!
exception.controller.missingServletRequestPart = Missing servlet request part!
exception.controller.bindException = Bind exception!
exception.controller.asyncRequestTimeoutException = Async request timeout!

typeMismatch.userSearchData.maxRecordsCount = maxRecordsCount must be an integer!

NotNull.userData.firstName = The first name cannot be null!
Size.userData.firstName = The first name length must have between 3 and 100 characters!
NotNull.userData.lastName = The last name cannot be null!
Size.userData.lastName = The last name length must have between 3 and 100 characters!
NotNull.userData.email = The e-mail cannot be null!
Email.userData.email = The e-mail must be a valid e-mail address!
Size.userData.email = The e-mail length must have between 6 and 100 characters!
NotNull.userData.emailRepeat = The repeated e-mail cannot be null!
Email.userData.emailRepeat = The repeated e-mail must be a valid e-mail address!
Size.userData.emailRepeat = The repeated e-mail length must have between 6 and 100 characters!
NotNull.userData.password = The password cannot be null!
Size.userData.password = The password length must be between 8 and 100 characters!
NotNull.userData.passwordRepeat = The repeated password cannot be null!
Size.userData.passwordRepeat = The repeated password length must be between 8 and 100 characters!
NotNull.userData.sex = The sex declaration cannot be null!
Enumerated.userData.sex = The sex declaration must be either 'm' or 'f'!
NotNull.userData.lang = The preferred language cannot be null!
Enumerated.userData.lang = The preferred language must be either 'EN', 'DE' or 'FR'!


typeMismatch.commentData.postId = postId must be an integer!
NotNull.commentData.postId = postId cannot be empty!
NotNull.commentData.text = Comment text cannot be empty!
Size.commentData.text = Comment is a little short!

typeMismatch.friendData.userId1 = userId1 must be an integer!
NotNull.friendData.userId1 = userId1 must not be empty!
typeMismatch.friendData.userId2 = userId2 must be an integer!
NotNull.friendData.userId2 = userId2 must not be empty!
typeMismatch.friendData.action = action must be an integer number between 1 and 3!
NotNull.friendData.action = action must not be empty!
Min.friendData.action = action must be an integer number between 1 and 3!
Max.friendData.action = action must be an integer number between 1 and 3!

NotNull.postData.title = title cannot be null!
Size.postData.title = The title must be at least 4 characters long!
NotNull.postData.textBody = The text cannot be empty!
Size.postData.textBody = The text must be at least 10 characters long!
NotNull.postData.isGlobal = The boolean isGlobal flag must be provided!
PostController.updatePost.allFieldsNil = At least one field must be non null!
typeMismatch.postSearchData.posterUserId = Poster user Id not a valid number!
Size.postSearchData.title = Title must have a length between 3 and 100 characters!
Enumerated.postSearchData.visibility = Visibility must be either of: 'onlyGlobal', 'all', 'onlyFriends', 'onlyCurrentUser'!
NotNull.postSearchData.maxRecordsCount = maxRecordsCount must not be null!
typeMismatch.postSearchData.maxRecordsCount = maxRecordsCount must be an integer!
typeMismatch.postSearchData.before = before must be an integer!
typeMismatch.postSearchData.after = after must be an integer!

NotNull.simpleUserSearchData.searchString = Search string cannot be empty!
Size.simpleUserSearchData.searchString = The minimum search string size is 3!
NotNull.simpleUserSearchData.limit = Limit cannot be null!

UsersController.getUsers.afterBeforeBothSet = Provide only after or before key but not both!
PostsController.getPost.titleSizeTooShort = The given title is too short!

NotNull.searchData.maxRecordsCount = maxRecordsCount needs to be provided!